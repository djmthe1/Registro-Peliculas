<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YpapxAAAAABJRU5ErkJggg==
</value>
  </data>
</root>